<?php

namespace AppBundle\Entity;

/**
 * MedCheckupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MedCheckupRepository extends \Doctrine\ORM\EntityRepository
{
	public function findRelevantToUser($user) {
		$qb = $this->getEntityManager()->createQueryBuilder();
		// If it is a Doctor and a Hospital is defined
		if ($user->getUserGroup()->getId() === 4 && is_null($user->getHospital()) === FALSE) {			
		    $qb
		        ->select('m')
		        ->from('AppBundle:MedCheckup', 'm')
		        ->where('m.sysUser = :id')
		        ->setParameter('id', $user->getId())
		        ->orderBy('m.id', 'DESC');
		// If it is a Coach
		} else if ($user->getUserGroup()->getId() === 5) {			
			$qb
		    	->select('m', 'p')
		        ->from('AppBundle:MedCheckup', 'm')
		        ->leftJoin('m.patient', 'p')
		        ->where('p.sysUser = :id')
		        ->setParameter('id', $user->getId())
		        ->orderBy('m.id', 'DESC');
		} else {
			$qb
		        ->select('m')
		        ->from('AppBundle:MedCheckup', 'm')
		        ->orderBy('m.id', 'DESC');
		}		

	    try {
	    	return $qb->getQuery()->getResult();			
		} catch (\Doctrine\ORM\NoResultException $e) { return null; } 
	}

	public function findIdsRelevantToUser($user) {
		$qb = $this->getEntityManager()->createQueryBuilder();
		// If it is a Doctor and a Hospital is defined
		if ($user->getUserGroup()->getId() === 4 && is_null($user->getHospital()) === FALSE) {			
		    $qb
		        ->select('m.id')
		        ->from('AppBundle:MedCheckup', 'm')
		        ->where('m.sysUser = :id')
		        ->setParameter('id', $user->getId())
		        ->orderBy('m.id', 'DESC');
		// If it is a Coach
		} else if ($user->getUserGroup()->getId() === 5) {			
			$qb
		    	->select('m.id')
		        ->from('AppBundle:MedCheckup', 'm')
		        ->leftJoin('m.patient', 'p')
		        ->where('p.sysUser = :id')
		        ->setParameter('id', $user->getId())
		        ->orderBy('m.id', 'DESC');
		} else {
			$qb
		        ->select('m.id')
		        ->from('AppBundle:MedCheckup', 'm')
		        ->orderBy('m.id', 'DESC');
		}		

	    try {
	    	return $qb->getQuery()->getResult();			
		} catch (\Doctrine\ORM\NoResultException $e) { return null; } 
	}
}
